# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C7go9EXTJ30YnkWTTgnP2Y4ve9mYa_x5
"""

import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import mean_absolute_percentage_error, mean_squared_error

# Настройки страницы
st.set_page_config(page_title="Прогнозирование", layout="wide")

st.title("📈 Сравнение моделей прогнозирования")

# === ЗАГРУЗКА CSV ===
@st.cache_data
def load_data():
    df_prophet = pd.read_csv("forecast_prophet.csv", parse_dates=["ds"])
    df_rnn = pd.read_csv("forecast_rnn.csv", parse_dates=["ds"])
    return df_prophet, df_rnn

df_prophet, df_rnn = load_data()

# === ОБЪЕДИНЕНИЕ ДАННЫХ ===
forecast = pd.merge(df_prophet, df_rnn, on="ds", how="inner")

# === ВЫБОР МЕТОДА ===
method = st.radio("🔍 Выберите метод прогнозирования:", ['Prophet', 'RNN'])

# === ВЫБОР ДИАПАЗОНА ДАТ ===
start_date = forecast['ds'].min()
end_date = forecast['ds'].max()

date_range = st.date_input("📅 Выберите диапазон дат:", [start_date, end_date])

if len(date_range) != 2:
    st.warning("Выберите начальную и конечную дату.")
    st.stop()

start, end = pd.to_datetime(date_range[0]), pd.to_datetime(date_range[1])
df_plot = forecast[(forecast['ds'] >= start) & (forecast['ds'] <= end)].copy()

# === РАСЧЕТ МЕТРИК ===
if method == 'Prophet':
    y_true = df_plot['y']
    y_pred = df_plot['yhat']
else:
    y_true = df_plot['y_true_rnn']
    y_pred = df_plot['y_pred_rnn']

# Защита от NaN
if y_true.isnull().any() or y_pred.isnull().any():
    st.error("Ошибка: Обнаружены пропущенные значения в выбранном диапазоне.")
    st.stop()

mape = mean_absolute_percentage_error(y_true, y_pred) * 100
rmse = np.sqrt(mean_squared_error(y_true, y_pred))

# === ВЫВОД МЕТРИК ===
st.subheader("📊 Метрики качества")
col1, col2 = st.columns(2)
col1.metric("MAPE (%)", f"{mape:.2f}")
col2.metric("RMSE", f"{rmse:.2f}")

# === ГРАФИК ===
st.subheader("📉 График прогноза")

fig, ax = plt.subplots(figsize=(12, 5))
ax.plot(df_plot['ds'], y_true, label='Фактические значения', color='black')

if method == 'Prophet':
    ax.plot(df_plot['ds'], df_plot['yhat'], label='Прогноз Prophet', color='blue')
    ax.fill_between(df_plot['ds'], df_plot['yhat_lower'], df_plot['yhat_upper'],
                    color='blue', alpha=0.2, label='95% интервал')
else:
    ax.plot(df_plot['ds'], df_plot['y_pred_rnn'], label='Прогноз RNN', color='green', linestyle='--')

ax.set_xlabel("Дата")
ax.set_ylabel("Значение")
ax.grid(True)
ax.legend()
st.pyplot(fig)

# === ТАБЛИЦА ДАННЫХ ===
with st.expander("📋 Таблица прогнозов и фактов"):
    st.dataframe(df_plot[['ds', 'y', 'yhat', 'yhat_lower', 'yhat_upper', 'y_pred_rnn']])